(()=>{"use strict";var t={426:(t,n,e)=>{e.d(n,{Z:()=>a});var o=e(537),r=e.n(o),i=e(645),c=e.n(i)()(r());c.push([t.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n#content{\n    background-color: red;\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 150px 1fr;\n    position: relative;\n}\n#header{\n    grid-column: 1 / 3;\n    background-color: aqua;\n}\n\n#sidebar{\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    background-color: #fff;\n    position: relative;\n}\n\n#todos-container{\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: yellow;\n}\n\n.todo-div{\n    height: 50px;\n    width: 90%;\n    margin: 10px;\n    background-color: blue;\n    border: 2px solid black;\n}\n\n.sidebar-project{\n    width: 100%;\n    height: 50px;\n    background-color: red;\n    position: relative;\n}\n#add-project, #add-todo{\n    width: 100%;\n    height: 50px;\n    position: absolute;\n}\n#add-project{\n    bottom: 0;\n}\n#add-todo{\n    bottom: 50px;\n}\n\n#big-card{\n    position: absolute;\n    width: 60%;\n    height: 50%;\n    background-color: red;\n    top: calc(25%);\n    left: calc(20%);\n    display: none;\n}\n\n.remove-button-class{\n    position: absolute;\n    height: 20px;\n    width: 20px;\n    right: 10px;\n    top: 15px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;IACrB,aAAa;IACb,YAAY;IACZ,aAAa;IACb,gCAAgC;IAChC,6BAA6B;IAC7B,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,wBAAwB;AAC5B;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,YAAY;IACZ,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,qBAAqB;IACrB,kBAAkB;AACtB;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,SAAS;AACb;AACA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,qBAAqB;IACrB,cAAc;IACd,eAAe;IACf,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,WAAW;IACX,SAAS;AACb",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n#content{\n    background-color: red;\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 150px 1fr;\n    position: relative;\n}\n#header{\n    grid-column: 1 / 3;\n    background-color: aqua;\n}\n\n#sidebar{\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    background-color: #fff;\n    position: relative;\n}\n\n#todos-container{\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: yellow;\n}\n\n.todo-div{\n    height: 50px;\n    width: 90%;\n    margin: 10px;\n    background-color: blue;\n    border: 2px solid black;\n}\n\n.sidebar-project{\n    width: 100%;\n    height: 50px;\n    background-color: red;\n    position: relative;\n}\n#add-project, #add-todo{\n    width: 100%;\n    height: 50px;\n    position: absolute;\n}\n#add-project{\n    bottom: 0;\n}\n#add-todo{\n    bottom: 50px;\n}\n\n#big-card{\n    position: absolute;\n    width: 60%;\n    height: 50%;\n    background-color: red;\n    top: calc(25%);\n    left: calc(20%);\n    display: none;\n}\n\n.remove-button-class{\n    position: absolute;\n    height: 20px;\n    width: 20px;\n    right: 10px;\n    top: 15px;\n}"],sourceRoot:""}]);const a=c},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(c[d]=!0)}for(var s=0;s<t.length;s++){var A=[].concat(t[s]);o&&c[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),c=e.sources.map((function(t){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(t," */")}));return[n].concat(c).concat([i]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var i={},c=[],a=0;a<t.length;a++){var d=t[a],s=o.base?d[0]+o.base:d[0],A=i[s]||0,u="".concat(s," ").concat(A);i[s]=A+1;var l=e(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)n[l].references++,n[l].updater(p);else{var m=r(p,o);o.byIndex=a,n.splice(a,0,{identifier:u,updater:m,references:1})}c.push(u)}return c}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var c=0;c<i.length;c++){var a=e(i[c]);n[a].references--}for(var d=o(t,r),s=0;s<i.length;s++){var A=e(i[s]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=d}}},569:t=>{var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return t[o](i,i.exports,e),i.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{var t=e(379),n=e.n(t),o=e(795),r=e.n(o),i=e(569),c=e.n(i),a=e(565),d=e.n(a),s=e(216),A=e.n(s),u=e(589),l=e.n(u),p=e(426),m={};function f(t,n,e){if(t){const t=document.createElement("input");t.setAttribute("id","title-input"),e.appendChild(t);const n=document.createElement("button");n.setAttribute("id","project-submit"),e.appendChild(n),n.textContent="submit project"}else if(n){const t=document.createElement("input");t.setAttribute("id","title-input-todo"),e.appendChild(t);const n=document.createElement("button");submitProject.setAttribute("id","todo-submit"),e.appendChild(n),n.textContent="submit todo"}}m.styleTagTransform=l(),m.setAttributes=d(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals,document.querySelector("#content"),function(){const t=document.createElement("div");t.setAttribute("id","header"),content.appendChild(t)}(),function(){const t=document.createElement("div");t.setAttribute("id","sidebar"),content.appendChild(t);const n=document.createElement("button");n.textContent="Add a project",n.setAttribute("id","add-project"),t.appendChild(n);const e=document.createElement("button");e.textContent="Add a todo",e.setAttribute("id","add-todo"),t.appendChild(e)}(),function(){const t=document.createElement("div");t.setAttribute("id","todos-container"),content.appendChild(t)}(),function(){const t=document.createElement("div");t.setAttribute("id","big-card"),content.appendChild(t)}();const b=document.querySelector("#add-project"),h=(document.querySelector("#sidebar"),document.querySelector("#big-card")),C=document.querySelector("#add-todo"),v=document.querySelector("#todos-container"),g=[];function I(){let t="";document.querySelectorAll(".sidebar-project").forEach((t=>{t.remove()})),g.forEach((t=>{!function(t,n){const e=document.createElement("div");e.setAttribute("class","sidebar-project");const o=document.createElement("p");e.appendChild(o),o.textContent=`${t}`,sidebar.appendChild(e);const r=document.createElement("button");r.setAttribute("id",`${n}`),r.setAttribute("class","remove-button-class"),e.appendChild(r),r.textContent="X"}(t.title,g.indexOf(t))})),document.querySelectorAll(".remove-button-class").forEach((t=>{t.addEventListener("click",(function(t){g.splice(t.target.id,1),I()}))})),document.querySelectorAll(".sidebar-project").forEach((n=>{n.addEventListener("click",(function(){t=String(n.firstChild.textContent),g.forEach((n=>{n.title==String(t)&&(n.todoArray.push(n.title),v.innerHTML="",n.todoArray.forEach((t=>{!function(t,n){const e=document.createElement("div");e.setAttribute("class","todo-div"),e.textContent=t,n.appendChild(e)}(t,v)}))),C.addEventListener("click",(function(){h.style.display="initial",f(!1,!0,h)}))}))}))}))}b.addEventListener("click",(function(){h.style.display="initial",f(!0,!1,h);const t=document.querySelector("#project-submit"),n=document.querySelector("#title-input");t.addEventListener("click",(function(){!function(t){const n=new Array;g.push({title:t,todoArray:n})}(n.value),n.value="",I(),h.style.display="none"}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,