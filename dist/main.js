(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>c});var o=n(537),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([t.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n#cover{\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.511);\n    display: none;\n    position: absolute;\n    z-index: 2;\n}\n\n#content{\n    background-color: red;\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 150px 1fr;\n    position: relative;\n}\n#header{\n    grid-column: 1 / 3;\n    background-color: aqua;\n}\n\n#sidebar{\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    background-color: #fff;\n    position: relative;\n}\n\n#todos-container{\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: yellow;\n}\n\n.todo-div{\n    height: 50px;\n    width: 90%;\n    margin: 10px;\n    background-color: white;\n    border: 2px solid black;\n}\n\n.sidebar-project{\n    width: 100%;\n    height: 50px;\n    background-color: red;\n    position: relative;\n}\n#add-project, #add-todo{\n    width: 100%;\n    height: 50px;\n    position: absolute;\n}\n#add-project{\n    bottom: 0;\n}\n#add-todo{\n    bottom: 50px;\n}\n\n#big-card{\n    position: absolute;\n    width: 60%;\n    height: 50%;\n    background-color: red;\n    top: calc(25%);\n    left: calc(20%);\n    display: none;\n    z-index: 3;\n}\n\n.remove-button-class, .remove-todo-button-class{\n    position: absolute;\n    height: 20px;\n    width: 20px;\n    right: 10px;\n    top: 15px;\n}\n.todo-div{\n    position: relative;\n}\n#close-bigcard{\n    position: absolute;\n    top: 10px;\n    right: 10px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sCAAsC;IACtC,aAAa;IACb,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,qBAAqB;IACrB,aAAa;IACb,YAAY;IACZ,aAAa;IACb,gCAAgC;IAChC,6BAA6B;IAC7B,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,wBAAwB;AAC5B;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,YAAY;IACZ,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,qBAAqB;IACrB,kBAAkB;AACtB;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,SAAS;AACb;AACA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,qBAAqB;IACrB,cAAc;IACd,eAAe;IACf,aAAa;IACb,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,WAAW;IACX,SAAS;AACb;AACA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,WAAW;AACf",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n#cover{\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.511);\n    display: none;\n    position: absolute;\n    z-index: 2;\n}\n\n#content{\n    background-color: red;\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 150px 1fr;\n    position: relative;\n}\n#header{\n    grid-column: 1 / 3;\n    background-color: aqua;\n}\n\n#sidebar{\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    background-color: #fff;\n    position: relative;\n}\n\n#todos-container{\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: yellow;\n}\n\n.todo-div{\n    height: 50px;\n    width: 90%;\n    margin: 10px;\n    background-color: white;\n    border: 2px solid black;\n}\n\n.sidebar-project{\n    width: 100%;\n    height: 50px;\n    background-color: red;\n    position: relative;\n}\n#add-project, #add-todo{\n    width: 100%;\n    height: 50px;\n    position: absolute;\n}\n#add-project{\n    bottom: 0;\n}\n#add-todo{\n    bottom: 50px;\n}\n\n#big-card{\n    position: absolute;\n    width: 60%;\n    height: 50%;\n    background-color: red;\n    top: calc(25%);\n    left: calc(20%);\n    display: none;\n    z-index: 3;\n}\n\n.remove-button-class, .remove-todo-button-class{\n    position: absolute;\n    height: 20px;\n    width: 20px;\n    right: 10px;\n    top: 15px;\n}\n.todo-div{\n    position: relative;\n}\n#close-bigcard{\n    position: absolute;\n    top: 10px;\n    right: 10px;\n}"],sourceRoot:""}]);const c=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<t.length;s++){var A=[].concat(t[s]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},a=[],c=0;c<t.length;c++){var d=t[c],s=o.base?d[0]+o.base:d[0],A=i[s]||0,l="".concat(s," ").concat(A);i[s]=A+1;var u=n(l),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var b=r(p,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:b,references:1})}a.push(l)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var c=n(i[a]);e[c].references--}for(var d=o(t,r),s=0;s<i.length;s++){var A=n(i[s]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=d}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),o=n(795),r=n.n(o),i=n(569),a=n.n(i),c=n(565),d=n.n(c),s=n(216),A=n.n(s),l=n(589),u=n.n(l),p=n(426),b={};function m(t,e,n){if(t){const t=document.createElement("input");t.setAttribute("id","title-input"),n.appendChild(t);const e=document.createElement("button");e.setAttribute("id","project-submit"),n.appendChild(e),e.textContent="submit project",f(n)}else if(e){const t=document.createElement("input");t.setAttribute("id","title-input-todo"),n.appendChild(t);for(let t=0;t<3;t++){const e=document.createElement("input");e.setAttribute("type","radio"),e.setAttribute("class","radio"),e.setAttribute("name","priority"),e.setAttribute("id",`priority-${t}`),n.appendChild(e)}const e=document.createElement("input");e.setAttribute("type","date"),e.setAttribute("id","due-date"),n.appendChild(e);const o=document.createElement("button");o.setAttribute("id","todo-submit"),n.appendChild(o),o.textContent="submit todo",f(n)}}function f(t){const e=document.createElement("button");e.setAttribute("id","close-bigcard"),t.appendChild(e),e.textContent="X"}function h(t,e,n,o,r){console.log(o),console.log(n);const i=document.createElement("div");i.setAttribute("class","todo-div"),i.setAttribute("id",`todo-dive-${n}`),i.textContent=t,e.appendChild(i);const a=document.createElement("button");a.setAttribute("id",`${n}`),a.setAttribute("class","remove-todo-button-class"),i.appendChild(a),a.textContent="X";const c=document.createElement("div");c.setAttribute("class","priority-div"),i.appendChild(c),"0"==o?i.style.backgroundColor="red":"1"==o?i.style.backgroundColor="yellow":"2"==o&&(i.style.backgroundColor="green");const d=document.createElement("p");i.appendChild(d),d.setAttribute("class","due-date-para"),d.textContent=r}b.styleTagTransform=u(),b.setAttributes=d(),b.insert=a().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=A(),e()(p.Z,b),p.Z&&p.Z.locals&&p.Z.locals,document.querySelector("#content"),function(){const t=document.createElement("div");t.setAttribute("id","header"),content.appendChild(t)}(),function(){const t=document.createElement("div");t.setAttribute("id","sidebar"),content.appendChild(t);const e=document.createElement("button");e.textContent="Add a project",e.setAttribute("id","add-project"),t.appendChild(e);const n=document.createElement("button");n.textContent="Add a todo",n.setAttribute("id","add-todo"),t.appendChild(n)}(),function(){const t=document.createElement("div");t.setAttribute("id","todos-container"),content.appendChild(t)}(),function(){const t=document.createElement("div");t.setAttribute("id","big-card"),content.appendChild(t)}(),function(){const t=document.createElement("div");t.setAttribute("id","cover"),content.appendChild(t)}();const C=document.querySelector("#add-project"),y=(document.querySelector("#sidebar"),document.querySelector("#big-card")),v=document.querySelector("#add-todo"),g=document.querySelector("#todos-container"),I=document.querySelector("#cover"),x=[];function B(){I.style.display="initial"}function k(){I.style.display="none"}function E(){y.style.display="none",y.innerHTML="",k()}function w(){let t="";document.querySelectorAll(".sidebar-project").forEach((t=>{t.remove()})),x.forEach((t=>{!function(t,e){const n=document.createElement("div");n.setAttribute("class","sidebar-project");const o=document.createElement("p");n.appendChild(o),o.textContent=`${t}`,sidebar.appendChild(n);const r=document.createElement("button");r.setAttribute("id",`${e}`),r.setAttribute("class","remove-button-class"),n.appendChild(r),r.textContent="X"}(t.title,x.indexOf(t))})),document.querySelectorAll(".remove-button-class").forEach((t=>{t.addEventListener("click",(function(t){x.splice(t.target.id,1),w(),g.innerHTML=""}))})),document.querySelectorAll(".sidebar-project").forEach((e=>{e.addEventListener("click",(function(){t=String(e.firstChild.textContent),x.forEach((e=>{e.title==String(t)&&(g.innerHTML="",e.todoArray.forEach((t=>{h(t,g,e.todoArray.indexOf(t),e.priorityArray[e.todoArray.indexOf(t)],e.dueDateArray[e.todoArray.indexOf(t)])})),S(e))})),v.addEventListener("click",(function(){let e=2;B(),y.style.display="initial",y.innerHTML="",m(!1,!0,y),document.querySelector("#close-bigcard").addEventListener("click",E);const n=document.querySelector("#title-input-todo"),o=document.querySelector("#todo-submit"),r=document.querySelector("#due-date"),i=document.querySelectorAll(".radio");x.forEach((a=>{a.title==String(t)&&o.addEventListener("click",(function(){console.log(r.value),i.forEach((t=>{t.checked&&(e=t.id.charAt(9))})),k(),a.todoArray.push(n.value),a.priorityArray.push(e),a.dueDateArray.push(r.value),console.log(a.dueDate),g.innerHTML="",a.todoArray.forEach((t=>{h(t,g,a.todoArray.indexOf(t),a.priorityArray[a.todoArray.indexOf(t)],a.dueDateArray[a.todoArray.indexOf(t)]),y.style.display="",y.innerHTML=""})),S(a,e,r.value)}))}))}))}))}))}function S(t,e,n){document.querySelectorAll(".remove-todo-button-class").forEach((o=>{o.addEventListener("click",(function(o){g.innerHTML="",t.todoArray.splice(o.target.id,1),t.priorityArray.splice(o.target.id,1),t.dueDateArray.splice(o.target.id,1),console.log(t.dueDateArray),t.todoArray.forEach((e=>{h(e,g,t.todoArray.indexOf(e),t.priorityArray[t.todoArray.indexOf(e)],t.dueDateArray[t.todoArray.indexOf(e)])})),S(t,e,n)}))}))}C.addEventListener("click",(function(){B(),y.style.display="initial",m(!0,!1,y);const t=document.querySelector("#project-submit"),e=document.querySelector("#title-input");document.querySelector("#close-bigcard").addEventListener("click",E),t.addEventListener("click",(function(){let t=!1;x.forEach((n=>{n.title==e.value&&(t=!0)})),t?alert("This project already exists"):(!function(t){const e=new Array,n=new Array,o=new Array;x.push({title:t,todoArray:e,priorityArray:n,dueDateArray:o})}(e.value),e.value="",w(),y.style.display="none",y.innerHTML="",k())}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,